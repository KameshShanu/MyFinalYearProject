@model MyVehicleTrackingSystem.Wings.Models.OperationTypeViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("Edit", "OperationType", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <br />
    @Html.AntiForgeryToken()
    @Html.Hidden("ClientId", Model.ClientId)
    <div class="row">
        <div class="col-centered col-md-7">

            <div class="well margin-top-20 create-forms">
                <div class="form-horizontal">
                    <div class="formtitle row remove-margin form-heading">
                        <div class="form-icon light-blue col-xs-2"><i class="fa fa-user-plus"></i></div>
                        <div class="text-light-blue col-xs-10">Edit Operation Type Information</div>
                    </div>
                    <div class="col-md-12">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.OperationTypeName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.OperationTypeName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OperationTypeName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ClientRate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.ClientRate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ClientRate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.DriverCommissionRate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.DriverCommissionRate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DriverCommissionRate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PorterCommissionRate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.PorterCommissionRate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PorterCommissionRate, "", new { @class = "text-danger" })
                            </div>
                        </div><br /><br />
                        <div class="form-group">
                            
                                <div class="text-center">
                                    @Html.ActionLink("Back", "Index", new { id = Model.ClientId }, new { @class = "btn btn-info btn-raised" })
                                    <input type="submit" value="SAVE OPERATION TYPE" class="btn btn-default btn-raised" />
                                </div>
                          
                        </div>
                    </div>
                    <div class="row remove-margin clearfix">
                        </div>
                    </div>

                </div>
            </div>
        </div>
               
                  
             
                }
                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
