@model MyVehicleTrackingSystem.Wings.Models.DispatchNoteViewModel

@{
    ViewBag.Title = "ViewDispatch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Hidden("DispatchNoteId")
    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="well margin-top-20 create-forms">
                <div class="formtitle row remove-margin form-heading">
                    <div class="form-icon light-blue col-xs-2"><i class="fa fa-eye"></i></div>
                    <div class="text-light-blue col-xs-10">View Dispatch</div>
                </div>
                <br>
                <div class="clearfix">
                    <div class="col-md-6">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Client, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Client, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Client, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CompanyAddress, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.CompanyAddress, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.CompanyAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.VehicleLicensePlateNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.VehicleLicensePlateNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.VehicleLicensePlateNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.VehicleDeliveryType, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.VehicleDeliveryType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.VehicleDeliveryType, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Driver, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Driver, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Driver, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-horizontal">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Helper, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Helper, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Helper, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DispatchDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">                                                                                                              
                                    <div id="datepicker" class="input-group date birth-date" data-date-format="yyyy-MM-dd">                                       
                                        <input class="form-control" name="DispatchDate" id="DispatchDate" type="text" value="@Model.DispatchDate.ToString("yyyy-MMMM-dd")" readonly/>
                                        <span class="input-group-addon"><i></i></span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.DispatchDate, "", new { @class = "text-danger" })                                                                 
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsDispatchNoteReceived, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-2 radioBtn">
                                    <input type="radio" name="IsDispatchNoteReceived" value="true"> Yes<br>
                                </div>
                                <div class="col-md-2 radioBtn">
                                    <input type="radio" name="IsDispatchNoteReceived" value="false"> No<br>
                                    @Html.ValidationMessageFor(model => model.IsDispatchNoteReceived, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group ">
                                @Html.LabelFor(model => model.IsGoodsDelivered, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-2 radioBtn">
                                    <input type="radio" name="IsGoodsDelivered" value="true"> Yes<br>
                                </div>
                                <div class="col-md-2 radioBtn">
                                    <input type="radio" name="IsGoodsDelivered" value="false"> No<br>
                                    @Html.ValidationMessageFor(model => model.IsGoodsDelivered, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row remove-margin clearfix">
                    <div class="text-center">
                        @Html.ActionLink("Back", "Open", null, new { @class = "btn btn-info btn-raised" })
                        <input type="submit" id="submit2" name="button" value="Close" class="btn btn-default btn-raised" />
                        <input type="submit" id="submit1" name="button" value="Cancel" class="btn btn-default btn-raised" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/MyVehicleTracker/Dispatch/create.js"></script>
}
